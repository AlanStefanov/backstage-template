apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${{values.component_name}}
  namespace: ${{values.namespace}}
spec:
  replicas: _REPLICAS_
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  selector:
    matchLabels:
      app: ${{values.component_name}}
  template:
    metadata:
      labels:
        app: ${{values.component_name}}
    spec:
      containers:
        - name: ${{values.component_name}}
          image: _IMAGE_
          ports:
            - containerPort: 80
          env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: SPRING_PROFILES_ACTIVE
              value: _ENVIRONMENT_
            - name: NEW_RELIC_APP_NAME
              value: _NEW_RELIC_APP_NAME_
            - name: NEW_RELIC_ERROR_COLLECTOR_EXPECTED_STATUS_CODES
              value: _NEW_RELIC_EXPECTED_STATUS_CODES_
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: databasecredentials
                  key: db_pwd_replace_necessary #TODO: replace with necessary
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: databasecredentials
                  key: db_nme_replace_necessary #TODO: replace with necessary
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: databasecredentials
                  key: db_usr_replace_necessary #TODO: replace with necessary
            - name: DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: database-username-host
                  key: database-dns-capa-c-flexible
            - name: KAFKA_API_CLIENT
              valueFrom:
                secretKeyRef:
                  key: kafka-api-client
                  name: kafka-credentials
            - name: KAFKA_API_SECRET
              valueFrom:
                secretKeyRef:
                  key: kafka-api-secret
                  name: kafka-credentials
            - name: KAFKA_HOST
              valueFrom:
                secretKeyRef:
                  key: kafka-dns
                  name: kafka-credentials
            - name: KAFKA_PROTOCOL
              valueFrom:
                secretKeyRef:
                  key: kafka-security-protocol
                  name: kafka-credentials
          startupProbe:
            httpGet:
              path: /actuator/health
              port: 80
            initialDelaySeconds: 60
            timeoutSeconds: 10
            periodSeconds: 30
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 80
            initialDelaySeconds: 15
            timeoutSeconds: 3
            periodSeconds: 10
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 80
            initialDelaySeconds: 15
            timeoutSeconds: 3
            periodSeconds: 10
            failureThreshold: 3
          imagePullPolicy: Always
          resources:
            requests:
              cpu: _CPU_REQUEST_
              memory: _MEMORY_REQUEST_
      imagePullSecrets:
        - name: _SECRET_
